/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.lsp.liferay.portlet.socialliving.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.lsp.liferay.portlet.socialliving.model.ChannelEntry;
import org.lsp.liferay.portlet.socialliving.model.ChannelEntryModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ChannelEntry service. Represents a row in the &quot;LSPSL_ChannelEntry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.lsp.liferay.portlet.socialliving.model.ChannelEntryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ChannelEntryImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ChannelEntryImpl
 * @see org.lsp.liferay.portlet.socialliving.model.ChannelEntry
 * @see org.lsp.liferay.portlet.socialliving.model.ChannelEntryModel
 * @generated
 */
public class ChannelEntryModelImpl extends BaseModelImpl<ChannelEntry>
	implements ChannelEntryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a channel entry model instance should use the {@link org.lsp.liferay.portlet.socialliving.model.ChannelEntry} interface instead.
	 */
	public static final String TABLE_NAME = "LSPSL_ChannelEntry";
	public static final Object[][] TABLE_COLUMNS = {
			{ "channelEntryId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "comments", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table LSPSL_ChannelEntry (channelEntryId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,comments VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table LSPSL_ChannelEntry";
	public static final String ORDER_BY_JPQL = " ORDER BY channelEntry.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY LSPSL_ChannelEntry.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.lsp.liferay.portlet.socialliving.model.ChannelEntry"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.lsp.liferay.portlet.socialliving.model.ChannelEntry"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.lsp.liferay.portlet.socialliving.model.ChannelEntry"),
			true);
	public static long GROUPID_COLUMN_BITMASK = 1L;
	public static long USERID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.lsp.liferay.portlet.socialliving.model.ChannelEntry"));

	public ChannelEntryModelImpl() {
	}

	public long getPrimaryKey() {
		return _channelEntryId;
	}

	public void setPrimaryKey(long primaryKey) {
		setChannelEntryId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_channelEntryId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return ChannelEntry.class;
	}

	public String getModelClassName() {
		return ChannelEntry.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("channelEntryId", getChannelEntryId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("comments", getComments());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long channelEntryId = (Long)attributes.get("channelEntryId");

		if (channelEntryId != null) {
			setChannelEntryId(channelEntryId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String comments = (String)attributes.get("comments");

		if (comments != null) {
			setComments(comments);
		}
	}

	public long getChannelEntryId() {
		return _channelEntryId;
	}

	public void setChannelEntryId(long channelEntryId) {
		_channelEntryId = channelEntryId;
	}

	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	public void setUserName(String userName) {
		_userName = userName;
	}

	public Date getCreateDate() {
		return _createDate;
	}

	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public String getComments() {
		if (_comments == null) {
			return StringPool.BLANK;
		}
		else {
			return _comments;
		}
	}

	public void setComments(String comments) {
		_comments = comments;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ChannelEntry toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (ChannelEntry)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ChannelEntry.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Object clone() {
		ChannelEntryImpl channelEntryImpl = new ChannelEntryImpl();

		channelEntryImpl.setChannelEntryId(getChannelEntryId());
		channelEntryImpl.setGroupId(getGroupId());
		channelEntryImpl.setCompanyId(getCompanyId());
		channelEntryImpl.setUserId(getUserId());
		channelEntryImpl.setUserName(getUserName());
		channelEntryImpl.setCreateDate(getCreateDate());
		channelEntryImpl.setModifiedDate(getModifiedDate());
		channelEntryImpl.setComments(getComments());

		channelEntryImpl.resetOriginalValues();

		return channelEntryImpl;
	}

	public int compareTo(ChannelEntry channelEntry) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(), channelEntry.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		ChannelEntry channelEntry = null;

		try {
			channelEntry = (ChannelEntry)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = channelEntry.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ChannelEntryModelImpl channelEntryModelImpl = this;

		channelEntryModelImpl._originalGroupId = channelEntryModelImpl._groupId;

		channelEntryModelImpl._setOriginalGroupId = false;

		channelEntryModelImpl._originalUserId = channelEntryModelImpl._userId;

		channelEntryModelImpl._setOriginalUserId = false;

		channelEntryModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ChannelEntry> toCacheModel() {
		ChannelEntryCacheModel channelEntryCacheModel = new ChannelEntryCacheModel();

		channelEntryCacheModel.channelEntryId = getChannelEntryId();

		channelEntryCacheModel.groupId = getGroupId();

		channelEntryCacheModel.companyId = getCompanyId();

		channelEntryCacheModel.userId = getUserId();

		channelEntryCacheModel.userName = getUserName();

		String userName = channelEntryCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			channelEntryCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			channelEntryCacheModel.createDate = createDate.getTime();
		}
		else {
			channelEntryCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			channelEntryCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			channelEntryCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		channelEntryCacheModel.comments = getComments();

		String comments = channelEntryCacheModel.comments;

		if ((comments != null) && (comments.length() == 0)) {
			channelEntryCacheModel.comments = null;
		}

		return channelEntryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{channelEntryId=");
		sb.append(getChannelEntryId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", comments=");
		sb.append(getComments());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("org.lsp.liferay.portlet.socialliving.model.ChannelEntry");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>channelEntryId</column-name><column-value><![CDATA[");
		sb.append(getChannelEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>comments</column-name><column-value><![CDATA[");
		sb.append(getComments());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ChannelEntry.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			ChannelEntry.class
		};
	private long _channelEntryId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _comments;
	private long _columnBitmask;
	private ChannelEntry _escapedModelProxy;
}